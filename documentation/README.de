1. EINFÜHRUNG

Wine ist ein Programm, das es ermöglicht, Programme, die für Microsoft
Windows geschrieben wurden (inklusive DOS-, Windows 3.x- und Win32-
Binärdateien), unter Unix auszuführen. Es besteht aus einem Programm-
Lader, der Microsoft Windows-Binärdateien lädt und ausführt, sowie
einer Library (Winelib genannt), die Aufrufe der Windows API unter
Verwendung der entsprechenden Unix- oder X11-Gegenstücke implementiert.
Die Library kann auch benutzt werden, um Win32-Code nativ nach Unix
zu portieren.

Wine ist Freie Software, die unter der GNU LGPL veröffentlicht wird;
Bitte lesen Sie die Details in der Datei LICENSE nach.

2. SCHNELLSTART

Um den Quelltext zu kompilieren, empfiehlt es sich immer, den Wine-
Installer für den Build und die Installation von Wine zu verwenden.
Rufen Sie dazu aus dem Wurzelverzeichnis des Wine-Quelltextes (das
diese Datei enthält) das folgende Kommando auf:

./tools/wineinstall

Starten Sie Programme mit "wine [Optionen] Programm". Weitere 
Informationen und Problemlösungen entnehmen Sie bitte dem Rest dieser
Datei, der Man-Page von Wine und insbesondere der Vielzahl an 
Informationen, die Sie auf http://www.winehq.org finden.

3. VORAUSSETZUNGEN

Um Wine kompilieren und ausführen zu können, brauchen Sie eines der
folgenden Betriebssysteme:

  Linux version 2.0.36 oder neuer
  FreeBSD 6.3 oder neuer
  Solaris x86 9 oder neuer
  NetBSD-current
  Mac OS X 10.4 oder neuer

Da Wine Thread-Support auf Kernelebene benötigt, werden nur die oben
aufgeführten Betriebssysteme unterstützt.
Andere Betriebssysteme, die Kernel-Threads unterstützen, werden unter
Umständen in der Zukunft unterstützt.

Linux-Info:
  Obwohl Linux 2.2.x immer noch funktionieren sollte und Linux 2.0.x
  vielleicht auch noch funktioniert (ältere 2.0.x-Versionen verzeichneten
  Abstürze im Zusammenhang mit Threads), sollte man am besten einen
  aktuellen Kernel wie 2.4.x oder 2.6.x verwenden.

FreeBSD-Info:
  Stellen Sie sicher, dass Sie die Optionen USER_LDT, SYSVSHM, SYSVSEM und
  SYSVMSG in Ihrem Kernel aktiviert haben. Weitere Informationen finden Sie
  im Ports-Tree: ftp://ftp.freebsd.org/pub/FreeBSD/ports/ports/emulators/wine/

Solaris-Info:
  Höchstwahrscheinlich müssen Sie den Wine-Build mit der GNU-Toolchain
  (gcc, gas etc.) durchführen. Warnung: Die Installation von gas stellt nicht
  sicher, dass es vom gcc auch verwendet wird. Den gcc neu zu kompilieren, nach
  der Installation von gas, oder die Symbolischen Links von cc, as und ld
  mit den GNU-Tools zu verknüpfen, soll ausreichend sein.

NetBSD-Info:
  Stellen Sie sicher, dass Sie die Optionen USER_LDT, SYSVSHM, SYSVSEM und
  SYSVMSG in Ihrem Kernel aktiviert haben.

Mac OS X Info:
  Sie benötigen mindestens Xcode 2.4 um richtig unter x86 kompilieren zu können.

Unterstützte Dateisysteme:
  Wine sollte auf den meisten Dateisystemen laufen. Ein paar
  Kompatibilitäts-Probleme wurden auch gemeldet beim Dateizugriff über Samba.
  Ausserdem können wir, da NTFS derzeit nur sicher für Lesezugriffe genutzt
  werden kann, den Einsatz von NTFS nicht empfehlen; Windows-Programme
  benötigen fast immer Schreibzugriffe.
  Kopieren Sie NTFS-Dateien an einen Ort, an dem Sie Schreibrechte haben.

Grundsätzliche Voraussetzungen:
  Sie müssen die Include-Dateien für X11-Entwicklung installiert haben
  (Debian nennt diese xlib6g-dev, Red Hat XFree86-devel).

  Natürlich benötigen Sie auch "make" (höchstwahrscheinlich GNU make).

  Des Weiteren benötigen Sie flex in der Version 2.5 oder höher und bison.

Optionale Support-Bibliotheken:
  Der ./configure Aufruf zeigt am Ende optionale Bibliotheken an,
  die von Wine benutzt werden können, aber auf dem System nicht vorhanden
  sind.

  Auf 64-Bit Plattformen benötigen Sie die 32-bit
  Versionen dieser Bibliotheken; siehe dazu http://wiki.winehq.org/WineOn64bit

4. KOMPILIEREN

Wenn Sie sich dafür entscheiden, wineinstall nicht zu benutzen, führen Sie
bitte die folgenden Kommandos für den Build von Wine aus:

./configure
make depend
make

Das erledigt den Build des Programms "wine" und verschiedener Support-
Libraries / -Binärdateien.
Das Programm "wine" lädt ausführbare Windows-Dateien und führt sie aus.
Die Library "libwine" ("WineLib") kann benutzt werden, um Windows-Quelltexte
unter Unix zu kompilieren und zu verlinken.

Mit ./configure --help können Sie sich die Konfigurations-Optionen für
die Kompilierung anzeigen lassen.

Um mit Hilfe einer Patch-Datei auf ein neueres Release zu aktualisieren,
wechseln Sie erst mit cd in das Wurzelverzeichnis dieses Releases (eins
über dem, welches diese README-Datei enthält). Geben Sie dann
"make clean" ein und patchen Sie das Release mit dem Kommando:

    bunzip2 -c Patch-Datei | patch -p1

wobei "Patch-Datei" der Name der Patch-Datei ist (sowas wie
wine-1.0.x.diff.bz2). Sie können dann erneut "./configure" und danach
"make depend && make" aufrufen.

5. SETUP

Nachdem der Build von Wine korrekt durchgelaufen ist, können Sie das
Kommando "make install" aufrufen; Dadurch werden das Wine-Programm, die
Man-Page und einige andere benötigte Dateien installiert.

Vergessen Sie nicht, erst alle früheren Wine-Installationen zu entfernen.
Führen Sie vor der Installation entweder "dpkg -r wine", "rpm -e wine" oder
"make uninstall" aus.

Die Konfigurations-Hinweise finden Sie im Support-Bereich
von http://www.winehq.org.

Im Falle von Library-Ladefehlern (z.B. "Error while loading shared libraries:
libntdll.so") fügen Sie bitte den Library-Pfad zur Datei /etc/ld.so.conf hinzu
und führen Sie ldconfig als root aus.

6. AUSFÜHREN VON PROGRAMMEN

Wenn Sie Wine aufrufen, können Sie den vollständigen Pfad zur ausführbaren
Datei angeben oder nur einen Dateinamen.

Beispiel: Um Notepad auszuführen:

	wine notepad		   (den Suchpfad, der in der Konfigurations-Datei
	wine notepad.exe	   angegeben wurde, benutzend)

	wine c:\\windows\\notepad.exe  (die Dateinamen-Syntax von DOS benutzend)

	wine ~/.wine/drive_c/windows/notepad.exe  (die Dateinamen-Syntax von Unix benutzend)

        wine notepad.exe /parameter1 -parameter2 parameter3
				   (Programmaufruf mit Parametern)

Hinweis: Der Pfad zur Datei wird auch zum Pfad hinzugefügt, wenn ein vollständiger
         Dateiname auf der Kommandozeile angegeben wird.

Die Entwicklung von Wine ist noch nicht abgeschlossen, daher können einige
Programme abstürzen. In diesem Fall startet der Debugger, so dass Sie das Problem
untersuchen und beheben können. Weitere Informationen zu diesem Thema entnehmen Sie
bitte dem Kapitel Debugging aus dem Wine Developer's Guide.

7. WEITERFÜHRENDE INFORMATIONEN

WWW:	Eine große Anzahl an Informationen findet sich im WineHQ unter
	http://www.winehq.org/ : Verschiedene Wine Guides, Applikations-Datenbank,
	Fehlerverfolgungs-System. Das ist vermutlich der beste Ausgangspunkt.

FAQ:	Die FAQ zu Wine befindet sich unter http://www.winehq.org/FAQ

Usenet:	Hilfe und Diskussionen zu auf Wine bezogenen Problemen finden Sie unter
	comp.emulators.ms-windows.wine.

Fehler:	Melden Sie Fehler bitte an Wine-Bugzilla unter http://bugs.winehq.org
	Schauen Sie bitte erst in der Bugzilla-Datenbank nach, ob Ihr Problem
	bereits gemeldet wurde, bevor Sie eine Fehlermeldung verfassen. Sie 
	können Fehlermeldungen auch an comp.emulators.ms-windows.wine schicken.

IRC:	Online-Hilfe wird Ihnen im Chat-Kanal #WineHQ unter irc.freenode.net gewährt.

Git:	Der aktuelle Wine-Entwicklungs-Zweig ist über Git verfügbar.
	Besuchen Sie http://www.winehq.org/site/git für weitere Informationen.

Mailing-Listen:
	Es gibt mehrere Mailing-Listen für die Wine-User und -Entwickler; Schauen Sie
	sich bitte dazu http://www.winehq.org/forums an.

Wiki:	Das Wine-Wiki finden Sie unter http://wiki.winehq.org

Wenn Sie etwas hinzufügen oder einen Fehler beheben, senden Sie den Patch bitte
(im 'diff -u'-Format) an die Liste wine-patches@winehq.org, um ihn in die nächste
Ausgabe aufnehmen zu können.

--
Alexandre Julliard
julliard@winehq.org

Übersetzung von Christian Britz (Deutschland)
Auf die Übersetzung bezogene Fehlermeldungen,
Anregungen und Kommentare senden Sie bite an:
cbritz@gmx.net
